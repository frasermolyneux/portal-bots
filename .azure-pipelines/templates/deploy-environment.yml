parameters:
  - name: azureSubscription
    type: string
  - name: azureEnvironment
    type: string
  - name: vmEnvironment
    type: string
  - name: environmentName
    type: string

stages:
- stage: deploy_${{ parameters.environmentName }}
  jobs:
    - deployment: deploy_terraform
      environment: ${{ parameters.azureEnvironment }}

      variables:
      - group: ${{ parameters.azureEnvironment }}

      workspace:
        clean: all

      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self

              - template: tasks/terraform-plan-and-apply.yml@ado-pipeline-templates
                parameters:
                  azureSubscription: "${{ parameters.azureSubscription }}"
                  terraformFolder: 'terraform'
                  terraformVarFile: 'tfvars/${{ parameters.environmentName }}.tfvars.json'
                  terraformBackendFile: 'backends/${{ parameters.environmentName }}.backend.hcl'

    - deployment: 'DeployToVirtualMachine'
      dependsOn: deploy_terraform

      variables:
      - name: client_app_id
        value: $[ dependencies.deploy_terraform.outputs['deploy_terraform.terraform_output.client_app_id'] ]
      - name: client_app_secret
        value: $[ dependencies.deploy_terraform.outputs['deploy_terraform.terraform_output.client_app_secret'] ]
      - name: repository_subscription_key
        value: $[ dependencies.deploy_terraform.outputs['deploy_terraform.terraform_output.repository_subscription_key'] ]
      - name: event_ingest_subscription_key
        value: $[ dependencies.deploy_terraform.outputs['deploy_terraform.terraform_output.event_ingest_subscription_key'] ]
      - name: mysql_connection_string
        value: $[ dependencies.deploy_terraform.outputs['deploy_terraform.terraform_output.mysql_connection_string'] ]

      environment:
        name: ${{ parameters.vmEnvironment }}
        resourceType: VirtualMachine

      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self

              - task: PowerShell@2
                inputs:
                  pwsh: true
                  targetType: 'inline'
                  script: |
                    Write-Host "Running on $($env:COMPUTERNAME)"

              - task: PowerShell@2
                inputs:
                  pwsh: true
                  filePath: 'scripts/Deploy-BotEnvironment.ps1'
                  arguments: '-sourceWorkingDirectory "$(System.DefaultWorkingDirectory)" -environment "${{ parameters.environmentName }}" -client_app_id "$(client_app_id)" -client_app_secret "$(client_app_secret)" -repository_subscription_key "$(repository_subscription_key)" -event_ingest_subscription_key "$(event_ingest_subscription_key)" -mysql_connection_string "$(mysql_connection_string)"'
                  